// Generated by CoffeeScript 1.6.3
(function() {
  var ProcessEnvPrecompiler, fs;

  fs = require("fs");

  module.exports = ProcessEnvPrecompiler = (function() {
    ProcessEnvPrecompiler.prototype.brunchPlugin = true;

    ProcessEnvPrecompiler.prototype.searchRegEx = /\$PROCESS_ENV_(\w+)/gi;

    function ProcessEnvPrecompiler(config) {
      var conf, target, _ref;
      conf = ((_ref = config.plugins) != null ? _ref.process_env : void 0) || {};
      this.customTargets = (function() {
        var _i, _len, _ref1, _results;
        _ref1 = conf.custom_targets || [];
        _results = [];
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          target = _ref1[_i];
          _results.push({
            path: target
          });
        }
        return _results;
      })();
      this.raw = conf.raw || false;
    }

    ProcessEnvPrecompiler.prototype.onCompile = function(generatedFiles) {
      var file, _i, _len, _ref, _results,
        _this = this;
      _ref = this.customTargets.concat(generatedFiles);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        _results.push((function(file) {
          var data, result;
          data = fs.readFileSync(file.path, "utf8");
          result = data.replace(_this.searchRegEx, function(match) {
            var replacement;
            match = match.replace('$PROCESS_ENV_', '');
            if (match && process.env[match]) {
              if (_this.raw) {
                replacement = process.env[match];
              } else {
                replacement = "'" + process.env[match] + "'";
              }
            } else {
              replacement = 'undefined';
            }
            return replacement;
          });
          return fs.writeFileSync(file.path, result);
        })(file));
      }
      return _results;
    };

    return ProcessEnvPrecompiler;

  })();

}).call(this);
